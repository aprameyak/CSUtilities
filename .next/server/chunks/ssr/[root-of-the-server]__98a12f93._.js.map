{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/server/og/image-response.ts","turbopack:///[project]/node_modules/next/og.js","turbopack:///[project]/app/opengraph-image.tsx","turbopack:///[project]/app/opengraph-image--metadata.js"],"sourcesContent":["type OgModule = typeof import('next/dist/compiled/@vercel/og')\n\nfunction importModule(): Promise<\n  typeof import('next/dist/compiled/@vercel/og')\n> {\n  return import(\n    process.env.NEXT_RUNTIME === 'edge'\n      ? 'next/dist/compiled/@vercel/og/index.edge.js'\n      : 'next/dist/compiled/@vercel/og/index.node.js'\n  )\n}\n\n/**\n * The ImageResponse class allows you to generate dynamic images using JSX and CSS.\n * This is useful for generating social media images such as Open Graph images, Twitter cards, and more.\n *\n * Read more: [Next.js Docs: `ImageResponse`](https://nextjs.org/docs/app/api-reference/functions/image-response)\n */\nexport class ImageResponse extends Response {\n  public static displayName = 'ImageResponse'\n  constructor(...args: ConstructorParameters<OgModule['ImageResponse']>) {\n    const readable = new ReadableStream({\n      async start(controller) {\n        const OGImageResponse: typeof import('next/dist/compiled/@vercel/og').ImageResponse =\n          // So far we have to manually determine which build to use,\n          // as the auto resolving is not working\n          (await importModule()).ImageResponse\n        const imageResponse = new OGImageResponse(...args) as Response\n\n        if (!imageResponse.body) {\n          return controller.close()\n        }\n\n        const reader = imageResponse.body!.getReader()\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) {\n            return controller.close()\n          }\n          controller.enqueue(value)\n        }\n      },\n    })\n\n    const options = args[1] || {}\n\n    const headers = new Headers({\n      'content-type': 'image/png',\n      'cache-control':\n        process.env.NODE_ENV === 'development'\n          ? 'no-cache, no-store'\n          : 'public, max-age=0, must-revalidate',\n    })\n    if (options.headers) {\n      const newHeaders = new Headers(options.headers)\n      newHeaders.forEach((value, key) => headers.set(key, value))\n    }\n    super(readable, {\n      headers,\n      status: options.status,\n      statusText: options.statusText,\n    })\n  }\n}\n","module.exports = require('./dist/server/og/image-response')\n","import { ImageResponse } from 'next/og'\n\nexport const runtime = 'edge'\n\nexport const alt = 'CSUtilities - Computer Science Learning Platform'\nexport const size = {\n  width: 1200,\n  height: 630,\n}\n\nexport const contentType = 'image/png'\n\nexport default async function Image() {\n  return new ImageResponse(\n    (\n      <div\n        style={{\n          background: 'linear-gradient(135deg, #3b82f6, #8b5cf6)',\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          color: 'white',\n          fontFamily: 'system-ui',\n        }}\n      >\n        <div\n          style={{\n            fontSize: 72,\n            fontWeight: 'bold',\n            marginBottom: 20,\n            textAlign: 'center',\n          }}\n        >\n          CSUtilities\n        </div>\n        <div\n          style={{\n            fontSize: 32,\n            textAlign: 'center',\n            maxWidth: 800,\n            lineHeight: 1.2,\n          }}\n        >\n          Master Data Structures & Algorithms\n        </div>\n        <div\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: 0.9,\n            textAlign: 'center',\n          }}\n        >\n          University Rankings • Company Rankings • Jobs • Hackathons\n        </div>\n      </div>\n    ),\n    {\n      ...size,\n    }\n  )\n}\n","import { alt, contentType, runtime, size } from \"./opengraph-image.tsx\"\nimport { fillMetadataSegment } from 'next/dist/lib/metadata/get-metadata-route'\n\nconst imageModule = { alt, contentType, runtime, size }\n\nexport default async function (props) {\n    const { __metadata_id__: _, ...params } = await props.params\n    const imageUrl = fillMetadataSegment(\"/\", params, \"opengraph-image\")\n\n    function getImageMetadata(imageMetadata, idParam) {\n        const data = {\n            alt: imageMetadata.alt,\n            type: imageMetadata.contentType || 'image/png',\n            url: imageUrl + (idParam ? ('/' + idParam) : '') + \"?7de41c1a7397dbb4\",\n        }\n        const { size } = imageMetadata\n        if (size) {\n            data.width = size.width; data.height = size.height;\n        }\n        return data\n    }\n\n    return [getImageMetadata(imageModule, '')]\n}\n"],"names":["ImageResponse","importModule","process","env","NEXT_RUNTIME","Response","displayName","constructor","args","readable","ReadableStream","start","controller","OGImageResponse","imageResponse","body","close","reader","getReader","done","value","read","enqueue","options","headers","Headers","NODE_ENV","newHeaders","forEach","key","set","status","statusText"],"mappings":"sHAkBaA,gBAAAA,qCAAAA,IAAN,OAAMA,UAAsBK,wBACnBC,WAAAA,CAAc,eAAA,AAC5BC,aAAY,GAAGC,CAAsD,CAAE,CACrE,MAAMC,EAAW,IAAIC,eAAe,CAClC,MAAMC,MAAMC,CAAU,EAKpB,IAAME,EAAgB,GADnB,CAAA,AACuBD,MADjBZ,AArBR,EACOG,CAAAA,CAAAA,EADD,CACXF,GAoBaD,CAAa,AApBF,CAoBKD,GApBrBG,CAAqB,EAAlB,CAACC,MACR,AAmBsC,IACOI,GAE7C,GAAI,CAACM,EAAcC,IAAI,CACrB,CADuB,MAChBH,EAAWI,KAAK,GAGzB,IAAMC,EAASH,EAAcC,IAAI,CAzBjC,AAyBmCG,SAAS,GAC5C,MAAO,CAAM,CACX,GAAM,MAAEC,CAAI,OAAEC,CAAK,CAAE,CAAG,MAAMH,EAAOI,IAAI,GACzC,GAAIF,EACF,IADQ,GACDP,EAAWI,KAAK,GAEzBJ,EAAWU,OAAO,CAACF,EACrB,CACF,CACF,GAEMG,EAAUf,CAAI,CAAC,EAAE,EAAI,CAAC,EAEtBgB,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,YAChB,gBAGM,CAFJvB,QAAQC,GAAG,CAACuB,QAAQ,KAAK,UAG7B,GAFQ,AAGJH,EAAQC,OAAO,EAEjBG,AAFmB,AACA,IAAIF,QAAQF,EAAQC,OAAO,EACnCI,OAAO,CAAC,CAACR,EAAOS,IAAQL,EAAQM,GAAG,CAACD,EAAKT,IAEtD,KAAK,CAACX,EAAU,SACde,EACAO,OAAQR,EAAQQ,MAAM,CACtBC,WAAYT,EAAQS,UAAU,AAChC,EACF,CACF,mBC/DA,EAAO,OAAO,CAAA,EAAA,CAAA,CAAA,yCCAd,EAAA,CAAA,CAAA,OCCA,IAAA,EAAA,EAAA,CAAA,CAAA,OAEA,IAAM,EAAc,CAAE,IDCH,CCDG,kDAAK,YDOA,CCPA,WAAa,QDDjB,CCCiB,MAAS,KDE7B,CAClB,ACH+C,MDGxC,KACP,OAAQ,GACV,CCLsD,EAEvC,eAAA,EAAgB,CAAK,EAChC,GAAM,CAAE,gBAAiB,CAAC,CAAE,GAAG,EAAQ,CAAG,MAAM,EAAM,MAAM,CACtD,EAAW,CAAA,EAAA,EAAA,mBAAA,AAAmB,EAAC,IAAK,EAAQ,mBAelD,MAAO,CAbP,AAaQ,SAbC,AAAiB,CAAa,CAAE,CAAO,EAC5C,IAAM,EAAO,CACT,IAAK,EAAc,GAAG,CACtB,KAAM,EAAc,WAAW,EAAI,YACnC,MAAK,WAAW,CAAC,OACrB,EACM,CAF0B,AAExB,KAAA,CAF8B,AAE1B,CAAE,CAAG,EAIjB,MANiD,CAG7C,CAH+C,GAI/C,CAJmD,CAI9C,CADC,IACI,CAAG,EAAK,KAAK,CAAE,EAAK,MAAM,CAAG,EAAK,MAAM,EAE/C,CACX,EAEyB,EAAa,GAAI,AAC9C","ignoreList":[0,1]}